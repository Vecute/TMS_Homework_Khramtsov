import '../styles/PostList.scss';
import { useEffect, useState } from 'react';
import { useSelector } from 'react-redux';
import { PostCard } from './PostCard';
import { PostModal } from './PostModal';
import { RootState } from '../redux/store';
import PostsLoader from './PostsLoader';

const PostList = () => {
  // –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ activeTab —Å –ø–æ–º–æ—â—å—é useState –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ "all"
  const [activeTab, setActiveTab] = useState<"all" | "favorites">("all");

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ Redux —Å –ø–æ–º–æ—â—å—é useSelector
  const posts = useSelector((state: RootState) => state.postsReducer.posts);

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç favorites –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ Redux
  const favorites = useSelector((state: RootState) => state.favoritesReducer);

  // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ—Å—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è activeTab
  const filteredPosts = activeTab === "favorites" ? posts.filter((post) => favorites[post.id]) : posts;

  useEffect(() => {
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –Ω–∞—á–∞–ª–æ (0, 0)
    window.scrollTo(0, 0);
  }, []);

  return (
    <div>
      <PostsLoader />
      <div className='post__tab-line'>
        <button
          onClick={() => setActiveTab("all")} // –ü—Ä–∏ –∫–ª–∏–∫–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º activeTab –≤ "all"
          className={`post__tab ${activeTab === "all" ? "selected" : ""}`} // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å "selected", –µ—Å–ª–∏ activeTab —Ä–∞–≤–µ–Ω "all"
        >
          All
        </button>

        <button
          onClick={() => setActiveTab("favorites")} // –ü—Ä–∏ –∫–ª–∏–∫–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º activeTab –≤ "favorites"
          className={`post__tab ${activeTab === "favorites" ? "selected" : ""}`} // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å "selected", –µ—Å–ª–∏ activeTab —Ä–∞–≤–µ–Ω "favorites"
        >
          Favorites
        </button>
      </div>
      <div className="post-list">
        {/* –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã */}
        {filteredPosts.length > 0 ? (
          // –ï—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞ —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç PostCard
          filteredPosts.map((post) => (
            <PostCard
              key={post.id} // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
              {...post} // –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ø–æ—Å—Ç–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç PostCard –∫–∞–∫ –ø—Ä–æ–ø—Å—ã
            />
          ))
        ) : (
          <div className="post__empty">There are no posts üò≠</div>
        )}
        <PostModal />
      </div>
    </div>
  );
};

export default PostList;