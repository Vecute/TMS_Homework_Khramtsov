import "../styles/PostList.scss";
import TemplatePage from "./TemplatePage";
import { PostCard } from "../components/PostCard";
import { useParams, useNavigate } from "react-router-dom";
import { useDispatch, useSelector } from "react-redux";
import { setSelectedImage } from "../redux/imagePopUpReducer";
import { ImageModal } from "../components/ImageModal";
import { RootState, useAppDispatch } from "../redux/store";
import { useEffect, useState } from "react";
import useTokenChecker from "../customHooks/useTokenChecker";
import { useHttp } from "../services/authToken";
import Alert from "../components/Alert";
import { saveMyPostsToLocalStorage } from "../redux/myPostsReducer";
import { myPostsSlice } from "../redux/myPostsReducer";

const MyPostPage = () => {
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ postId –∏–∑ URL —Å –ø–æ–º–æ—â—å—é useParams
  const { postId } = useParams();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—É–∫–∞ useNavigate –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ navigate
  const navigate = useNavigate();
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—É–∫–∞ useDispatch –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ dispatch
  const dispatch = useDispatch();
  // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é appDispatch –∏–∑ useAppDispatch
  const appDispatch = useAppDispatch();

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ Redux —Å –ø–æ–º–æ—â—å—é useSelector
  const posts = useSelector((state: RootState) => state.myPostsReducer.myPosts);
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤
  const isValid = useTokenChecker();

  // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é http –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
  const http = useHttp();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const [showAlert, setShowAlert] = useState(false);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏ —Ü–≤–µ—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const [alertMessage, setAlertMessage] = useState("");
  const [alertColor, setAlertColor] = useState(
    "var(--alert-background-error-color)"
  );

  // –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞ —Å ID, —Ä–∞–≤–Ω—ã–º postId, –≤ –º–∞—Å—Å–∏–≤–µ posts
  const post = posts.find((p) => p.id === parseInt(postId!, 10));

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
  const handleOpenImagePopUp = () => {
    if (post?.image) {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const img = new Image();
      img.onload = () => {
        // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å —É—Å–ø–µ—à–Ω–æ, –¥–∏—Å–ø–∞—Ç—á–∏–º —ç–∫—à–µ–Ω
        dispatch(setSelectedImage(post.image));
      };
      img.onerror = () => {
        // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
        dispatch(setSelectedImage("/fallback.png"));
      };
      img.src = post.image;
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞
  const handleDeleteClick = async (
    event: React.MouseEvent<HTMLButtonElement>
  ) => {
    if (!isValid) navigate("/");
    try {
      await http(
        `https://studapi.teachmeskills.by/blog/posts/${postId}`,
        {
          method: "DELETE",
        }
      );
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ posts, —É–¥–∞–ª—è—è –Ω—É–∂–Ω—ã–π –ø–æ—Å—Ç
      const updatedPosts = posts.filter((p) => p.id !== parseInt(postId!, 10));
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Redux
      appDispatch(myPostsSlice.actions.setMyPosts(updatedPosts));
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –≤ localStorage
      saveMyPostsToLocalStorage(updatedPosts);
      navigate("/my-posts"); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –ø–æ—Å—Ç–∞–º
    } catch (error) {
      console.error("Error fetching user data:", error); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
      setAlertMessage("Error when deleting a post"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      setAlertColor("var(--alert-background-error-color)"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      setShowAlert(true); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    }
  };

  useEffect(() => {
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –Ω–∞—á–∞–ª–æ (0, 0)
    window.scrollTo(0, 0);
  }, []);

  // –£—Å–ª–æ–≤–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
  if (!posts.length) {
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    return (
      <div className="post__loading">
        <div className="spinner"></div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –ø–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (post === undefined)...
  if (!post) {
    // ...—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    return (
      <div className="empty-post">
        <div className="post-empty">No posts found üò≠</div>
        <button onClick={() => navigate("/my-posts")} className="buttonBack">
          Return to my posts
        </button>
      </div>
    );
  }

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π
  if (!isValid) {
    return (
      <div className="empty-post">
        <div className="post-empty">No posts found üò≠</div>
        <button onClick={() => navigate("/my-posts")} className="buttonBack">
          Return to my posts
        </button>
      </div>
    );
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const handleCloseAlert = () => {
    setShowAlert(false);
  };

  return (
    <TemplatePage title={post.title}>
      {showAlert && (
        <Alert
          text={alertMessage}
          onClose={handleCloseAlert}
          color={alertColor}
        />
      )}
      <div className="post-single my-posts__single">
        <PostCard
          description={post.description || post.text || ""}
          id={post.id}
          date={post.date}
          title={post.title}
          image={post.image}
          key={post.id}
          onImageClick={handleOpenImagePopUp}
        />
        <div className="my-posts__buttons">
          <button onClick={() => navigate("/my-posts")} className="buttonBack">
            Return to my posts
          </button>
          <button
            onClick={handleDeleteClick}
            className="buttonBack my-posts__buttonDelete"
          >
            Remove post
          </button>
        </div>
      </div>
      <ImageModal />
    </TemplatePage>
  );
};

export default MyPostPage;